/* 
 This file was generated by Dashcode.  
 You may edit this file to customize your widget or web page 
 according to the license.txt file included in the project.
 */
//
// Function: load()
// Called by HTML body element's onload event when the widget is ready to start
//
function load()
{
    dashcode.setupParts();
}

//
// Function: remove()
// Called when the widget has been removed from the Dashboard
//
function remove()
{
    // Stop any timers to prevent CPU usage
    // Remove any preferences as needed
    // widget.setPreferenceForKey(null, dashcode.createInstancePreferenceKey("your-key"));
}

//
// Function: hide()
// Called when the widget has been hidden
//
function hide()
{
    // Stop any timers to prevent CPU usage
}

//
// Function: show()
// Called when the widget has been shown
//
function show()
{
    // Restart any timers that were stopped on hide
}

//
// Function: sync()
// Called when the widget has been synchronized with .Mac
//
function sync()
{
    // Retrieve any preference values that you need to be synchronized here
    // Use this for an instance key's value:
    // instancePreferenceValue = widget.preferenceForKey(null, dashcode.createInstancePreferenceKey("your-key"));
    //
    // Or this for global key's value:
    // globalPreferenceValue = widget.preferenceForKey(null, "your-key");
}

//
// Function: showBack(event)
// Called when the info button is clicked to show the back of the widget
//
// event: onClick event from the info button
//
function showBack(event)
{
    var front = document.getElementById("front");
    var back = document.getElementById("back");

    if (window.widget) {
        widget.prepareForTransition("ToBack");
    }

    front.style.display = "none";
    back.style.display = "block";

    cleanBackInterface();

    if (window.widget) {
        setTimeout('widget.performTransition();', 0);
    }
}

//
// Function: showFront(event)
// Called when the done button is clicked from the back of the widget
//
// event: onClick event from the done button
//
function showFront(event)
{
    var front = document.getElementById("front");
    var back = document.getElementById("back");

    if (window.widget) {
        widget.prepareForTransition("ToFront");
    }

    front.style.display="block";
    back.style.display="none";

    if (window.widget) {
        setTimeout('widget.performTransition();', 0);
    }
}

if (window.widget) {
    widget.onremove = remove;
    widget.onhide = hide;
    widget.onshow = show;
    widget.onsync = sync;
}

function retriveInfoFromService(event)
{
    
    var clist = document.getElementById("popup");
    var stops = new Array();
    xmlhttp=new XMLHttpRequest();
    xmlhttp.open("GET","http://dl.dropbox.com/u/409339/stops.xml",false);
    xmlhttp.send();
    xmlDoc=xmlhttp.responseXML;
    
    list= xmlDoc.getElementsByTagName("row");
            
    if (list != null)
    {
      for (i=0; i<list.length; i++)
      {
       var row = list[i];
        stops.push(row.getElementsByTagName("stop_name")[0].childNodes[0].nodeValue);
      }
    }
    stops.sort();
    
    for (i=0; i<stops.length; i++)
    {
        var elOptNew = document.createElement('option');
        elOptNew.text = stops[i];
        clist.add(elOptNew);
    }
}


function ChoosenLineEvt(event)
{
    //var selecteditem = event.toElement.value.split("- ");
    var choseStop = event.toElement.value.match(/\d+\S/g);
    //alert(selecteditem[1]);
    getQuery(choseStop);
}

function getQuery(choseStop){
    var xmlHttp = null;
    var theUrl = "http://m.gtt.to.it/m/it/arrivi.jsp?n="+choseStop;
    xmlHttp = new XMLHttpRequest();
    
    document.getElementById("textarea").innerHTML ="";
    
    xmlHttp.onreadystatechange=function()
    {
        if (xmlHttp.readyState==4 && xmlHttp.status==200)
        {
            //elimino spazi dalla risposta
            var cleanResponse = xmlHttp.responseText.replace(/\s/gm,"");
            
            //estrapolo il contenuto dei tag <li>..</li>
            
            //pattern per estrapolare il contenuto tra <li>
            var pattern = /<li>(.*?)<\/li/gm;
            
            var liBlocks = cleanResponse.match(pattern);
            
            if (liBlocks == null)
            {
                return;
            }
            
            //parso ogni blocco estrapolando la linea e gli orari di ogni linea
            
            var length = liBlocks.length;
            
            for (i=0; i<length; i++)
            {   
                //pattern funz per estrapolare tag linea
                var pattern = /<h3>L(.*?)<\/h3>/gm;
                
                var linea = liBlocks[i].match(pattern);
        
                if (linea == null)
                {
                    return;
                }
                
                linea = linea[0].match(/\d+\S/g);
        
                linea[1] = linea[1].replace("<","");
                
                document.getElementById("textarea").innerHTML += "Linea "+linea[1]+":  ";
        
                //estrapolo passaggi
                var patt = /\">(.*?)<\/sp/gm;
                
                var string1 = liBlocks[i].match(patt);
                
                if (string1 == null)
                {
                    return;
                }
                
                var total=string1.length;
    
                for (j=0;j<total;j++)
                {
                    var str = string1[j];
                    var m = str.match(/\d+/g);
                    if(m != null)
                    {
                     //   alert(""+m[0]+":"+m[1]);
                        document.getElementById("textarea").innerHTML += ""+m[0]+":"+m[1]+"  ";
                    }
                }
                
                if(i<length-1){
                document.getElementById("textarea").innerHTML += "\r\n";}
            }
        }
    }
    xmlHttp.open("GET",theUrl,true);
    xmlHttp.send();

}
   
function savePreferredStop(event)
{
    var e = document.getElementById("popup1");
    var key = e.options[e.selectedIndex].value;
    
    var value = document.getElementById("textField").value;
    if(value == null){
        return;
    }
    //save preference
    alert(key);
    widget.setPreferenceForKey(value,key);
    
    //clean the interface
    document.getElementById("textField").value = "";
    document.getElementById("text8").style.display='block';
}


function prefStopEvent(event)
{
    var value = widget.preferenceForKey(event.toString());
    getQuery(value);
}


function cleanBackInterface(event)
{
    document.getElementById("text8").style.display='none';
}
